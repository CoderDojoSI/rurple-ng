#!/usr/bin/python

from twisted.internet import threads, reactor, defer


def doInThread():
    print "Starting in thread"
    print "Result of blocking call:", blockingCall()
    
def blockingCall():
    return threads.blockingCallFromThread(reactor, deferAMo)
    
def deferAMo():
    d = defer.Deferred()
    reactor.callLater(2, d.callback, "foo")
    return d

def loopForever():
    print "looping..."
    reactor.callLater(0.7, loopForever)

loopForever()
reactor.callInThread(doInThread)
reactor.run()

